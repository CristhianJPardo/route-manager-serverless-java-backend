name: Deploy Health Lambda to AWS

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy Health
    runs-on: ubuntu-latest

    env:
      AWS_REGION:   ${{ vars.AWS_DEFAULT_REGION }}
      S3_BUCKET:    ${{ vars.S3_BUCKET }}
      SAM_TEMPLATE: ${{ vars.SAM_TEMPLATE }}
      STACK_NAME:   ${{ vars.STACK_NAME }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Verify AWS CLI v2
        run: aws --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Install SAM CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install aws-sam-cli

      - name: Build health module
        run: mvn clean package -pl modules/health --also-make

      - name: Verify health JAR was generated
        run: |
          echo "üì¶ Contenido de modules/health/target/:"
          ls modules/health/target

      - name: Verify HealthCheckHandler in the shaded JAR
        run: |
          echo "üîç Verificando HealthCheckHandler.class en el JAR‚Ä¶"
          jar tf modules/health/target/health.jar \
            | grep -q "co/lacorporacionun/health/HealthCheckHandler.class" \
            && echo "‚úÖ Clase encontrada" \
            || (echo "‚ùå Clase no encontrada en el JAR" && exit 1)

      - name: Package with SAM
        run: |
          sam package \
            --template-file ${{ env.SAM_TEMPLATE }} \
            --output-template-file packaged.yaml \
            --s3-bucket ${{ env.S3_BUCKET }}

      - name: Deploy with SAM
        run: |
          sam deploy \
            --template-file packaged.yaml \
            --stack-name ${{ env.STACK_NAME }} \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.AWS_REGION }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset
